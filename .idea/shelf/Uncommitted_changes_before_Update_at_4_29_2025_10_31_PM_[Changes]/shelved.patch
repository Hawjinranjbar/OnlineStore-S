Index: onlinestore-IS-master/src/frmCustomerRegistration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//import javax.swing.*;\r\n//import java.awt.*;\r\n//import java.awt.event.*;\r\n//\r\n//public class frmCustomerRegistration extends JFrame {\r\n//    public frmCustomerRegistration() {\r\n//        setTitle(\"پنل ثبت\u200Cنام مشتری\");\r\n//        setSize(400, 300);\r\n//        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n//\r\n//        // پنل برای نمایش آیکون\u200Cها\r\n//        JPanel panel = new JPanel();\r\n//        panel.setLayout(new GridLayout(2, 2));  // ۲ ردیف و ۲ ستون\r\n//\r\n//        // ساخت دکمه\u200Cها برای ورود به هر فرم\r\n//        JButton btnCustomer = new JButton(\"ثبت\u200Cنام مشتری\");\r\n//        JButton btnReview = new JButton(\"بازخورد\");\r\n//        JButton btnOrder = new JButton(\"سفارشات\");\r\n//        JButton btnBack = new JButton(\"بازگشت\");\r\n//\r\n//        // تنظیم آیکون\u200Cها (مسیرها رو باید تغییر بدید به آیکون\u200Cهای واقعی)\r\n//        btnCustomer.setIcon(new ImageIcon(\"path/to/customer_icon.png\"));\r\n//        btnReview.setIcon(new ImageIcon(\"path/to/review_icon.png\"));\r\n//        btnOrder.setIcon(new ImageIcon(\"path/to/order_icon.png\"));\r\n//        btnBack.setIcon(new ImageIcon(\"path/to/back_icon.png\"));\r\n//\r\n//        // افزودن اکشن برای دکمه\u200Cها\r\n//        btnCustomer.addActionListener(new ActionListener() {\r\n//            public void actionPerformed(ActionEvent e) {\r\n//                new frmCustomer().setVisible(true);  // فرم ثبت\u200Cنام مشتری\r\n//                dispose();\r\n//            }\r\n//        });\r\n//\r\n//        btnReview.addActionListener(new ActionListener() {\r\n//            public void actionPerformed(ActionEvent e) {\r\n//                new frmReview().setVisible(true);  // فرم بازخورد مشتری\r\n//                dispose();\r\n//            }\r\n//        });\r\n//\r\n//        btnOrder.addActionListener(new ActionListener() {\r\n//            public void actionPerformed(ActionEvent e) {\r\n//                new frmOrderCustomer().setVisible(true);  // فرم سفارشات مشتری\r\n//                dispose();\r\n//            }\r\n//        });\r\n//\r\n//        btnBack.addActionListener(new ActionListener() {\r\n//            public void actionPerformed(ActionEvent e) {\r\n//                new frmMain().setVisible(true);  // بازگشت به فرم اصلی\r\n//                dispose();\r\n//            }\r\n//        });\r\n//\r\n//        // افزودن دکمه\u200Cها به پنل\r\n//        panel.add(btnCustomer);\r\n//        panel.add(btnReview);\r\n//        panel.add(btnOrder);\r\n//        panel.add(btnBack);\r\n//\r\n//        // افزودن پنل به فریم\r\n//        add(panel, BorderLayout.CENTER);\r\n//    }\r\n//\r\n//    public static void main(String[] args) {\r\n//        new frmCustomerRegistration().setVisible(true);\r\n//    }\r\n//}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\n\r\npublic class frmCustomerRegistration extends JFrame {\r\n    public frmCustomerRegistration() {\r\n        setTitle(\"پنل ثبت\u200Cنام مشتری\");\r\n        setSize(500, 400);\r\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n\r\n        // Set the background color of the frame\r\n        getContentPane().setBackground(new Color(255, 182, 193)); // Light Pink\r\n\r\n        // Create panel with GridLayout\r\n        JPanel panel = new JPanel();\r\n        panel.setLayout(new GridLayout(2, 2, 10, 10));  // ۲ ردیف و ۲ ستون\r\n        panel.setBackground(new Color(255, 182, 193));\r\n\r\n        // Create Buttons for different actions\r\n        JButton btnCustomer = createButton(\"ثبت\u200Cنام مشتری\", \"path/to/customer_icon.png\");\r\n        JButton btnReview = createButton(\"بازخورد\", \"path/to/review_icon.png\");\r\n        JButton btnOrder = createButton(\"سفارشات\", \"path/to/order_icon.png\");\r\n        JButton btnBack = createButton(\"بازگشت\", \"path/to/back_icon.png\");\r\n\r\n        // Adding ActionListeners to the buttons\r\n        btnCustomer.addActionListener(e -> {\r\n            new frmCustomer().setVisible(true);\r\n            dispose();\r\n        });\r\n\r\n        btnReview.addActionListener(e -> {\r\n            new frmReview().setVisible(true);\r\n            dispose();\r\n        });\r\n\r\n        btnOrder.addActionListener(e -> {\r\n            new frmOrderCustomer().setVisible(true);\r\n            dispose();\r\n        });\r\n\r\n        btnBack.addActionListener(e -> {\r\n            new frmMain().setVisible(true);\r\n            dispose();\r\n        });\r\n\r\n        // Adding buttons to the panel\r\n        panel.add(btnCustomer);\r\n        panel.add(btnReview);\r\n        panel.add(btnOrder);\r\n        panel.add(btnBack);\r\n\r\n        // Add the panel to the frame\r\n        add(panel, BorderLayout.CENTER);\r\n    }\r\n\r\n    // Helper method to create buttons with icons\r\n    private JButton createButton(String text, String iconPath) {\r\n        JButton button = new JButton(text);\r\n        button.setIcon(new ImageIcon(iconPath)); // Set the button icon\r\n        button.setBackground(new Color(221, 160, 221)); // Purple\r\n        button.setFont(new Font(\"Arial\", Font.BOLD, 14)); // Bold font\r\n        button.setFocusPainted(false);\r\n        button.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 2));\r\n        return button;\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        new frmCustomerRegistration().setVisible(true);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/onlinestore-IS-master/src/frmCustomerRegistration.java b/onlinestore-IS-master/src/frmCustomerRegistration.java
--- a/onlinestore-IS-master/src/frmCustomerRegistration.java	(revision f072206c392cb410b57e837b7ac3382ec1189a5b)
+++ b/onlinestore-IS-master/src/frmCustomerRegistration.java	(date 1745906228675)
@@ -1,93 +1,3 @@
-//import javax.swing.*;
-//import java.awt.*;
-//import java.awt.event.*;
-//
-//public class frmCustomerRegistration extends JFrame {
-//    public frmCustomerRegistration() {
-//        setTitle("پنل ثبت‌نام مشتری");
-//        setSize(400, 300);
-//        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-//
-//        // پنل برای نمایش آیکون‌ها
-//        JPanel panel = new JPanel();
-//        panel.setLayout(new GridLayout(2, 2));  // ۲ ردیف و ۲ ستون
-//
-//        // ساخت دکمه‌ها برای ورود به هر فرم
-//        JButton btnCustomer = new JButton("ثبت‌نام مشتری");
-//        JButton btnReview = new JButton("بازخورد");
-//        JButton btnOrder = new JButton("سفارشات");
-//        JButton btnBack = new JButton("بازگشت");
-//
-//        // تنظیم آیکون‌ها (مسیرها رو باید تغییر بدید به آیکون‌های واقعی)
-//        btnCustomer.setIcon(new ImageIcon("path/to/customer_icon.png"));
-//        btnReview.setIcon(new ImageIcon("path/to/review_icon.png"));
-//        btnOrder.setIcon(new ImageIcon("path/to/order_icon.png"));
-//        btnBack.setIcon(new ImageIcon("path/to/back_icon.png"));
-//
-//        // افزودن اکشن برای دکمه‌ها
-//        btnCustomer.addActionListener(new ActionListener() {
-//            public void actionPerformed(ActionEvent e) {
-//                new frmCustomer().setVisible(true);  // فرم ثبت‌نام مشتری
-//                dispose();
-//            }
-//        });
-//
-//        btnReview.addActionListener(new ActionListener() {
-//            public void actionPerformed(ActionEvent e) {
-//                new frmReview().setVisible(true);  // فرم بازخورد مشتری
-//                dispose();
-//            }
-//        });
-//
-//        btnOrder.addActionListener(new ActionListener() {
-//            public void actionPerformed(ActionEvent e) {
-//                new frmOrderCustomer().setVisible(true);  // فرم سفارشات مشتری
-//                dispose();
-//            }
-//        });
-//
-//        btnBack.addActionListener(new ActionListener() {
-//            public void actionPerformed(ActionEvent e) {
-//                new frmMain().setVisible(true);  // بازگشت به فرم اصلی
-//                dispose();
-//            }
-//        });
-//
-//        // افزودن دکمه‌ها به پنل
-//        panel.add(btnCustomer);
-//        panel.add(btnReview);
-//        panel.add(btnOrder);
-//        panel.add(btnBack);
-//
-//        // افزودن پنل به فریم
-//        add(panel, BorderLayout.CENTER);
-//    }
-//
-//    public static void main(String[] args) {
-//        new frmCustomerRegistration().setVisible(true);
-//    }
-//}
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
 
 
 
@@ -99,7 +9,7 @@
     public frmCustomerRegistration() {
         setTitle("پنل ثبت‌نام مشتری");
         setSize(500, 400);
-        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
+        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
 
         // Set the background color of the frame
         getContentPane().setBackground(new Color(255, 182, 193)); // Light Pink
Index: onlinestore-IS-master/src/Framuser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\n\r\npublic class Framuser extends JFrame {\r\n    public Framuser() {\r\n        // Set the title and size of the window\r\n        setTitle(\"پنل مدیریت\");\r\n        setSize(500, 400);\r\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n\r\n        // Set the background color of the frame\r\n        getContentPane().setBackground(new Color(255, 182, 193)); // Light Pink\r\n\r\n        // Create the panel with GridLayout for button arrangement\r\n        JPanel panel = new JPanel();\r\n        panel.setLayout(new GridLayout(2, 2, 10, 10)); // 2 rows and 2 columns with some space\r\n        panel.setBackground(new Color(255, 182, 193));\r\n\r\n        // Create buttons for different forms\r\n        JButton btnAdminLogin = createButton(\"ورود مدیر\", \"path/to/admin_icon.png\");\r\n        JButton btnProduct = createButton(\"مدیریت محصولات\", \"path/to/product_icon.png\");\r\n        JButton btnBack = createButton(\"بازگشت\", \"path/to/back_icon.png\");\r\n\r\n        // Add action listeners for each button\r\n        btnAdminLogin.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n                new Framuser().setVisible(true);  // Open admin login form\r\n                dispose();\r\n            }\r\n        });\r\n\r\n        btnProduct.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n                new frmProduct().setVisible(true);  // Open product management form\r\n                dispose();\r\n            }\r\n        });\r\n\r\n        btnBack.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n                new frmMain().setVisible(true);  // Go back to the main form\r\n                dispose();\r\n            }\r\n        });\r\n\r\n        // Add buttons to the panel\r\n        panel.add(btnAdminLogin);\r\n        panel.add(btnProduct);\r\n        panel.add(btnBack);\r\n\r\n        // Add the panel to the frame\r\n        add(panel, BorderLayout.CENTER);\r\n    }\r\n\r\n    // Helper method to create buttons with icons and styling\r\n    private JButton createButton(String text, String iconPath) {\r\n        JButton button = new JButton(text);\r\n        button.setIcon(new ImageIcon(iconPath)); // Set the button icon\r\n        button.setBackground(new Color(221, 160, 221)); // Light Purple\r\n        button.setFont(new Font(\"Arial\", Font.BOLD, 14)); // Bold font\r\n        button.setFocusPainted(false);\r\n        button.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 2)); // Button border\r\n        return button;\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        // Launch the form\r\n        new Framuser().setVisible(true);  // Make sure to call the correct class\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/onlinestore-IS-master/src/Framuser.java b/onlinestore-IS-master/src/Framuser.java
--- a/onlinestore-IS-master/src/Framuser.java	(revision f072206c392cb410b57e837b7ac3382ec1189a5b)
+++ b/onlinestore-IS-master/src/Framuser.java	(date 1745906205268)
@@ -7,7 +7,7 @@
         // Set the title and size of the window
         setTitle("پنل مدیریت");
         setSize(500, 400);
-        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
+        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
 
         // Set the background color of the frame
         getContentPane().setBackground(new Color(255, 182, 193)); // Light Pink
Index: onlinestore-IS-master/src/frmMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\n\r\npublic class frmMain extends JFrame {\r\n    public frmMain() {\r\n        setTitle(\"پنل اصلی\");\r\n        setSize(500, 400);\r\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n\r\n        // Set background color\r\n        getContentPane().setBackground(new Color(255, 182, 193)); // Light Pink\r\n\r\n        // Create panel\r\n        JPanel panel = new JPanel();\r\n        panel.setLayout(new GridLayout(1, 2, 10, 10)); // 1 row, 2 columns\r\n        panel.setBackground(new Color(255, 182, 193));\r\n\r\n        // Create buttons\r\n        JButton btnManager = createButton(\"مدیر\", \"path/to/manager_icon.png\");\r\n        JButton btnCustomer = createButton(\"مشتری\", \"path/to/customer_icon.png\");\r\n\r\n        // Button actions\r\n        btnManager.addActionListener(e -> {\r\n            new FrmUser().setVisible(true);  // Admin Login form\r\n            dispose();\r\n        });\r\n\r\n        btnCustomer.addActionListener(e -> {\r\n            new frmCustomerRegistration().setVisible(true);  // Customer Registration form\r\n            dispose();\r\n        });\r\n\r\n        panel.add(btnManager);\r\n        panel.add(btnCustomer);\r\n\r\n        // Add panel to the center of the frame\r\n        add(panel, BorderLayout.CENTER);\r\n\r\n        // Exit button at the bottom\r\n        JButton btnBack = new JButton(\"خروج\");\r\n        btnBack.setFont(new Font(\"Arial\", Font.BOLD, 14));\r\n        btnBack.setBackground(new Color(221, 160, 221)); // Purple\r\n        btnBack.setFocusPainted(false);\r\n        btnBack.addActionListener(e -> System.exit(0)); // Exit the program\r\n\r\n        // Add the Exit button to the bottom of the frame\r\n        add(btnBack, BorderLayout.SOUTH);\r\n    }\r\n\r\n    // Helper method to create buttons with icons\r\n    private JButton createButton(String text, String iconPath) {\r\n        JButton button = new JButton(text);\r\n        button.setIcon(new ImageIcon(iconPath)); // Set the button icon\r\n        button.setBackground(new Color(221, 160, 221)); // Purple\r\n        button.setFont(new Font(\"Arial\", Font.BOLD, 14)); // Bold font\r\n        button.setFocusPainted(false);\r\n        button.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 2));\r\n        return button;\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        new frmMain().setVisible(true);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/onlinestore-IS-master/src/frmMain.java b/onlinestore-IS-master/src/frmMain.java
--- a/onlinestore-IS-master/src/frmMain.java	(revision f072206c392cb410b57e837b7ac3382ec1189a5b)
+++ b/onlinestore-IS-master/src/frmMain.java	(date 1745906205284)
@@ -6,7 +6,7 @@
     public frmMain() {
         setTitle("پنل اصلی");
         setSize(500, 400);
-        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
+        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
 
         // Set background color
         getContentPane().setBackground(new Color(255, 182, 193)); // Light Pink
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"53be4df2-84f7-4fa5-a84d-28b41497e51b\" name=\"Changes\" comment=\"push these\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;selmashj&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Hawjinranjbar/OnlineStore-S.git&quot;,\r\n    &quot;accountId&quot;: &quot;d5fa6f59-c6f0-4c22-8049-0889a14809a9&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2wGYPqdJb242WPkNQZEuRsgEZHi\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.Framuser.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.FrmUser.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.frmCustomerRegistration.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.frmOrderCustomer.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.frmReview.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-fbdcb00ec9e3-intellij.indexing.shared.core-IU-251.23774.435\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-f27c65a3e318-JavaScript-IU-251.23774.435\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"53be4df2-84f7-4fa5-a84d-28b41497e51b\" name=\"Changes\" comment=\"\" />\r\n      <created>1745669356395</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1745669356395</updated>\r\n      <workItem from=\"1745669357952\" duration=\"3131000\" />\r\n      <workItem from=\"1745778318894\" duration=\"60000\" />\r\n      <workItem from=\"1745778450504\" duration=\"31000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"push these\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1745670039560</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1745670039560</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"push these\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1745671572747</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1745671572747</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"push these\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1745671625123</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1745671625123</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"push these\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"push these\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision f072206c392cb410b57e837b7ac3382ec1189a5b)
+++ b/.idea/workspace.xml	(date 1745984198261)
@@ -5,7 +5,20 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="53be4df2-84f7-4fa5-a84d-28b41497e51b" name="Changes" comment="push these">
+      <change afterPath="$PROJECT_DIR$/onlinestore-IS-master/src/common/Category.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/onlinestore-IS-master/src/managers/CategoryManager.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/onlinestore-IS-master/src/ui/frmCategory.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/onlinestore-IS-master/src/Framuser.java" beforeDir="false" afterPath="$PROJECT_DIR$/onlinestore-IS-master/src/Framuser.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/onlinestore-IS-master/src/frmCustomerRegistration.java" beforeDir="false" afterPath="$PROJECT_DIR$/onlinestore-IS-master/src/frmCustomerRegistration.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/onlinestore-IS-master/src/frmMain.java" beforeDir="false" afterPath="$PROJECT_DIR$/onlinestore-IS-master/src/frmMain.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/OnlineStore-S/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/OnlineStore-S/Main.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/OnlineStore-S/common/Product.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/OnlineStore-S/common/Product.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/OnlineStore-S/frmProduct$1.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/OnlineStore-S/frmProduct$2.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/OnlineStore-S/frmProduct$3.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/OnlineStore-S/frmProduct.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/OnlineStore-S/managers/ProductManager.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/OnlineStore-S/managers/ProductManager.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -28,12 +41,12 @@
     &quot;assignee&quot;: &quot;selmashj&quot;
   }
 }</component>
-  <component name="GithubPullRequestsUISettings">{
-  &quot;selectedUrlAndAccountId&quot;: {
-    &quot;url&quot;: &quot;https://github.com/Hawjinranjbar/OnlineStore-S.git&quot;,
-    &quot;accountId&quot;: &quot;d5fa6f59-c6f0-4c22-8049-0889a14809a9&quot;
+  <component name="GithubPullRequestsUISettings"><![CDATA[{
+  "selectedUrlAndAccountId": {
+    "url": "https://github.com/Hawjinranjbar/OnlineStore-S.git",
+    "accountId": "838b17c0-85b8-4c29-a47a-33548c9d04d7"
   }
-}</component>
+}]]></component>
   <component name="ProjectColorInfo">{
   &quot;customColor&quot;: &quot;&quot;,
   &quot;associatedIndex&quot;: 6
@@ -48,8 +61,11 @@
     &quot;Application.Framuser.executor&quot;: &quot;Run&quot;,
     &quot;Application.FrmUser.executor&quot;: &quot;Run&quot;,
     &quot;Application.Main.executor&quot;: &quot;Run&quot;,
+    &quot;Application.frmCategory.executor&quot;: &quot;Run&quot;,
     &quot;Application.frmCustomerRegistration.executor&quot;: &quot;Run&quot;,
+    &quot;Application.frmMain.executor&quot;: &quot;Run&quot;,
     &quot;Application.frmOrderCustomer.executor&quot;: &quot;Run&quot;,
+    &quot;Application.frmProduct.executor&quot;: &quot;Run&quot;,
     &quot;Application.frmReview.executor&quot;: &quot;Run&quot;,
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
     &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
@@ -57,6 +73,7 @@
     &quot;git-widget-placeholder&quot;: &quot;main&quot;,
     &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
     &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/natas/IdeaProjects&quot;,
     &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
     &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
     &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
@@ -68,8 +85,8 @@
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
-        <option value="bundled-jdk-9823dce3aa75-fbdcb00ec9e3-intellij.indexing.shared.core-IU-251.23774.435" />
-        <option value="bundled-js-predefined-d6986cc7102b-f27c65a3e318-JavaScript-IU-251.23774.435" />
+        <option value="bundled-jdk-9823dce3aa75-a94e463ab2e7-intellij.indexing.shared.core-IU-243.26053.27" />
+        <option value="bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-IU-243.26053.27" />
       </set>
     </attachedChunks>
   </component>
@@ -84,6 +101,8 @@
       <workItem from="1745669357952" duration="3131000" />
       <workItem from="1745778318894" duration="60000" />
       <workItem from="1745778450504" duration="31000" />
+      <workItem from="1745944771149" duration="1334000" />
+      <workItem from="1745982821602" duration="617000" />
     </task>
     <task id="LOCAL-00001" summary="push these">
       <option name="closed" value="true" />
Index: onlinestore-IS-master/src/common/Category.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/onlinestore-IS-master/src/common/Category.java b/onlinestore-IS-master/src/common/Category.java
new file mode 100644
--- /dev/null	(date 1745912361676)
+++ b/onlinestore-IS-master/src/common/Category.java	(date 1745912361676)
@@ -0,0 +1,48 @@
+package common;
+
+public class Category {
+    private int id;
+    private String name;
+    private String description;
+    private int parentId; // اگه 0 باشه یعنی بدون پدر (Main Category)
+
+    public Category(int id, String name, String description, int parentId) {
+        this.id = id;
+        this.name = name;
+        this.description = description;
+        this.parentId = parentId;
+    }
+
+    public int getId() {
+        return id;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public String getDescription() {
+        return description;
+    }
+
+    public int getParentId() {
+        return parentId;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public void setDescription(String description) {
+        this.description = description;
+    }
+
+    public void setParentId(int parentId) {
+        this.parentId = parentId;
+    }
+
+    @Override
+    public String toString() {
+        return id + ";" + name + ";" + description + ";" + parentId;
+    }
+}
Index: onlinestore-IS-master/src/ui/frmCategory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/onlinestore-IS-master/src/ui/frmCategory.java b/onlinestore-IS-master/src/ui/frmCategory.java
new file mode 100644
--- /dev/null	(date 1745912459508)
+++ b/onlinestore-IS-master/src/ui/frmCategory.java	(date 1745912459508)
@@ -0,0 +1,138 @@
+import javax.swing.*;
+import java.awt.*;
+import java.awt.event.*;
+import common.Category;
+import managers.CategoryManager;
+
+public class frmCategory extends JFrame {
+    private JTextField txtId, txtName, txtParentId;
+    private JTextArea txtDescription, txtList;
+    private JButton btnInsert, btnUpdate, btnDelete;
+    private CategoryManager cm;
+
+    public frmCategory() {
+        setTitle("📂 Category Management");
+        setSize(850, 600);
+        setLocationRelativeTo(null);
+        setDefaultCloseOperation(EXIT_ON_CLOSE);
+        setLayout(new BorderLayout(10, 10));
+        cm = new CategoryManager();
+
+        // پنل ورودی
+        JPanel inputPanel = new JPanel(new GridLayout(4, 2, 10, 10));
+        inputPanel.setBorder(BorderFactory.createEmptyBorder(10, 20, 10, 20));
+        inputPanel.setBackground(Color.WHITE);
+
+        txtId = new JTextField();
+        txtName = new JTextField();
+        txtDescription = new JTextArea(2, 20);
+        txtParentId = new JTextField();
+
+        inputPanel.add(new JLabel("Category ID:"));
+        inputPanel.add(txtId);
+        inputPanel.add(new JLabel("Category Name:"));
+        inputPanel.add(txtName);
+        inputPanel.add(new JLabel("Description:"));
+        inputPanel.add(new JScrollPane(txtDescription));
+        inputPanel.add(new JLabel("Parent ID (0 if none):"));
+        inputPanel.add(txtParentId);
+
+        // دکمه‌ها
+        btnInsert = new JButton("➕ Insert Category");
+        btnUpdate = new JButton("✏️ Update Category");
+        btnDelete = new JButton("❌ Delete Category");
+
+        btnInsert.setBackground(new Color(0xD4EDDA));
+        btnUpdate.setBackground(new Color(0xFFF3CD));
+        btnDelete.setBackground(new Color(0xF8D7DA));
+
+        JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.CENTER, 20, 10));
+        buttonPanel.add(btnInsert);
+        buttonPanel.add(btnUpdate);
+        buttonPanel.add(btnDelete);
+
+        // لیست دسته‌بندی‌ها
+        txtList = new JTextArea(15, 60);
+        txtList.setEditable(false);
+        txtList.setFont(new Font("Segoe UI Emoji", Font.PLAIN, 14));
+        JScrollPane scrollPane = new JScrollPane(txtList);
+        scrollPane.setBorder(BorderFactory.createTitledBorder("📋 Category List"));
+        scrollPane.setPreferredSize(new Dimension(780, 300));
+
+        add(inputPanel, BorderLayout.NORTH);
+        add(buttonPanel, BorderLayout.CENTER);
+        add(scrollPane, BorderLayout.SOUTH);
+
+        // اکشن‌ها
+        btnInsert.addActionListener(new ActionListener() {
+            public void actionPerformed(ActionEvent e) {
+                try {
+                    Category c = getCategoryFromInput();
+                    cm.Insert(c);
+                    refreshList();
+                    JOptionPane.showMessageDialog(frmCategory.this, "✅ Category inserted.");
+                } catch (Exception ex) {
+                    JOptionPane.showMessageDialog(frmCategory.this, "❌ Insertion error.");
+                }
+            }
+        });
+
+        btnUpdate.addActionListener(new ActionListener() {
+            public void actionPerformed(ActionEvent e) {
+                try {
+                    int row = Integer.parseInt(JOptionPane.showInputDialog("Row number to update:"));
+                    Category c = getCategoryFromInput();
+                    cm.Update(c, row);
+                    refreshList();
+                    JOptionPane.showMessageDialog(frmCategory.this, "✅ Category updated.");
+                } catch (Exception ex) {
+                    JOptionPane.showMessageDialog(frmCategory.this, "❌ Update error.");
+                }
+            }
+        });
+
+        btnDelete.addActionListener(new ActionListener() {
+            public void actionPerformed(ActionEvent e) {
+                try {
+                    int row = Integer.parseInt(JOptionPane.showInputDialog("Row number to delete:"));
+                    cm.Delete(row);
+                    refreshList();
+                    JOptionPane.showMessageDialog(frmCategory.this, "✅ Category deleted.");
+                } catch (Exception ex) {
+                    JOptionPane.showMessageDialog(frmCategory.this, "❌ Deletion error.");
+                }
+            }
+        });
+
+        refreshList();
+        setVisible(true);
+    }
+
+    private Category getCategoryFromInput() {
+        int id = Integer.parseInt(txtId.getText());
+        String name = txtName.getText();
+        String description = txtDescription.getText();
+        int parentId = Integer.parseInt(txtParentId.getText());
+        return new Category(id, name, description, parentId);
+    }
+
+    private void refreshList() {
+        Category[] categories = cm.SelectAll();
+        StringBuilder s = new StringBuilder();
+        for (int i = 0; i < categories.length; i++) {
+            Category c = categories[i];
+            if (c != null) {
+                s.append(i).append(". ")
+                        .append(c.getName())
+                        .append(" | 📝 ").append(c.getDescription())
+                        .append(" | 📂 Parent ID: ").append(c.getParentId())
+                        .append("\n\n");
+            }
+        }
+        txtList.setText(s.toString());
+    }
+
+    public static void main(String[] args) {
+        new frmCategory();
+    }
+}
Index: onlinestore-IS-master/src/managers/CategoryManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/onlinestore-IS-master/src/managers/CategoryManager.java b/onlinestore-IS-master/src/managers/CategoryManager.java
new file mode 100644
--- /dev/null	(date 1745912407923)
+++ b/onlinestore-IS-master/src/managers/CategoryManager.java	(date 1745912407923)
@@ -0,0 +1,52 @@
+package managers;
+
+import common.Category;
+import filemanager.txtFileManager;
+
+public class CategoryManager {
+    private txtFileManager fm;
+
+    public CategoryManager() {
+        fm = new txtFileManager("category.txt");
+    }
+
+    public void Insert(Category c) {
+        fm.AppendRow(c.toString());
+    }
+
+    public void Update(Category c, int row) {
+        fm.UpdateRow(c.toString(), row);
+    }
+
+    public void Delete(int row) {
+        fm.DeleteRow(row);
+    }
+
+    public Category[] SelectAll() {
+        String[] rows = fm.GetArray();
+        if (rows == null || rows.length == 0) {
+            return new Category[0];
+        }
+
+        Category[] categories = new Category[rows.length];
+        for (int i = 0; i < rows.length; i++) {
+            try {
+                if (rows[i] != null && !rows[i].trim().isEmpty()) {
+                    String[] parts = rows[i].split(";");
+                    if (parts.length == 4) {
+                        int id = Integer.parseInt(parts[0]);
+                        String name = parts[1];
+                        String description = parts[2];
+                        int parentId = Integer.parseInt(parts[3]);
+
+                        categories[i] = new Category(id, name, description, parentId);
+                    }
+                }
+            } catch (Exception ex) {
+                System.out.println("❌ Error reading category at row " + i + ": " + ex.getMessage());
+                categories[i] = null;
+            }
+        }
+        return categories;
+    }
+}
